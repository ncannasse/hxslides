// Generated by Haxe 4.0.0-preview.4+b865f06c7
(function ($hx_exports) { "use strict";
var $hxEnums = {};
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var App = $hx_exports["App"] = function() { };
App.__name__ = true;
App._show = function(j) {
	j.css({ visibility : ""});
	return j;
};
App._hide = function(j) {
	j.css({ visibility : "hidden"});
	return j;
};
App.main = function() {
	var kwds = ["abstract","break","case","cast","class","continue","default","do","dynamic","else","enum","extends","extern","for","function","if","implements","import","in","inline","interface","macro","new","override","package","private","public","return","static","switch","throw","try","typedef","untyped","using","var","while"];
	var kwds_r = new RegExp("\\b(" + kwds.join("|") + ")\\b","g".split("u").join(""));
	var vals = ["null","true","false","this"];
	var vals_r = new RegExp("\\b(" + vals.join("|") + ")\\b","g".split("u").join(""));
	var _g_i = 0;
	var _g_j = $("pre");
	while(_g_i < _g_j.length) {
		var s = $(_g_j[_g_i++]);
		var html = s.html();
		var tabs = null;
		var _g = 0;
		var _g1 = html.split("\n");
		while(_g < _g1.length) {
			var line = _g1[_g];
			++_g;
			if(StringTools.trim(line) != "") {
				var r = new EReg("^\t*","");
				r.match(line);
				var t = r.matched(0);
				if(tabs == null || t.length < tabs.length) {
					tabs = t;
				}
			}
		}
		var _this_r = new RegExp("^" + Std.string(tabs),"gm".split("u").join(""));
		html = html.replace(_this_r,"");
		html = StringTools.trim(html);
		var _this_r1 = new RegExp("('[^']*')","g".split("u").join(""));
		html = html.replace(_this_r1,"<span __xlass='str'>$1</span>");
		var _this_r2 = new RegExp("((#if [a-zA-Z0-9_]+)|(#end)|(#elseif [a-zA-Z0-9_]+))","g".split("u").join(""));
		html = html.replace(_this_r2,"<span __xlass='cond'>$1</span>");
		var _this_r3 = new RegExp("(#else)","g".split("u").join(""));
		html = html.replace(_this_r3,"<span __xlass='cond'>$1</span>");
		html = html.replace(kwds_r,"<span class='kwd'>$1</span>");
		html = html.replace(vals_r,"<span class='val'>$1</span>");
		html = html.split("__xlass").join("class");
		var _this_r4 = new RegExp("(\"[^\"]*\")","g".split("u").join(""));
		html = html.replace(_this_r4,"<span class='str'>$1</span>");
		var _this_r5 = new RegExp("(//[^\n]*)","g".split("u").join(""));
		html = html.replace(_this_r5,"<span class='cmt'>$1</span>");
		var _this_r6 = new RegExp("(/\\*[^*]*\\*/)","g".split("u").join(""));
		html = html.replace(_this_r6,"<span class='cmt'>$1</span>");
		html = html.split("\t").join("    ");
		s.html(html);
	}
	var clickThrough = window.localStorage.getItem("click") != "false";
	var _g_i1 = 0;
	var _g_j1 = $("pre.byLine");
	while(_g_i1 < _g_j1.length) {
		var pre = $(_g_j1[_g_i1++]);
		var div = $("<div>").addClass("pre");
		var _g2 = 0;
		var _g11 = pre.html().split("\n");
		while(_g2 < _g11.length) {
			var line1 = _g11[_g2];
			++_g2;
			var i = 0;
			while(HxOverrides.cca(line1,i) == 32) ++i;
			line1 = HxOverrides.substr(line1,i,null);
			while(i-- > 0) line1 = "&nbsp;" + line1;
			$("<div>").addClass("line").html(line1).appendTo(div);
		}
		div.insertAfter(pre);
		pre.remove();
		if(clickThrough) {
			App._hide(div);
		}
	}
	var slides = [];
	var curHash = window.location.hash;
	var cur = Std.parseInt(HxOverrides.substr(window.location.hash,1,null));
	var sub = Std.parseInt(window.location.hash.split("-")[1]);
	var update = function() {
		curHash = "#" + cur + "-" + sub;
		window.location.hash = curHash;
	};
	if(cur == null) {
		cur = 0;
	}
	if(sub == null) {
		sub = 0;
	}
	var _g_i2 = 0;
	var _g_j2 = $(".slide");
	while(_g_i2 < _g_j2.length) {
		var s1 = $(_g_j2[_g_i2++]);
		var p = [s1.wrap("<div class='slide-container'>").parent()];
		s1.prepend($("<div>").addClass("slide-bg"));
		var id = [slides.length];
		var parts = clickThrough ? "*" : "empty";
		var parts1 = [s1.find("li,pre,h2,p,div.pre .line,.click").not("li > pre:first-child").filter(parts)];
		var tmp = parts1[0].not(".visible");
		parts1[0] = tmp;
		App._hide(parts1[0]);
		if(id[0] == cur) {
			var _g12 = 0;
			var _g3 = sub;
			while(_g12 < _g3) {
				var i1 = _g12++;
				App._show(App._show($(parts1[0][i1])).parent());
			}
		}
		slides.push(p[0]);
		p[0].hide();
		s1.click((function(parts2,id1,p1) {
			return function(e) {
				if(sub < parts2[0].length) {
					var p2 = $(parts2[0][sub]);
					App._show(App._show(p2).parent());
					if(p2.hasClass("hidePrev")) {
						App._hide($(parts2[0][sub - 1]));
					}
					if(p2.hasClass("highlight")) {
						var _g_i3 = 0;
						var _g_j3 = parts2[0];
						while(_g_i3 < _g_j3.length) {
							var p21 = $(_g_j3[_g_i3++]);
							p21.toggleClass("light",p2[0] == p21[0]).toggleClass("unlight",p2[0] != p21[0]);
						}
					}
					sub += 1;
				} else {
					var tid = id1[0] + 1;
					var n = slides[tid];
					if(n == null) {
						return;
					}
					cur = tid;
					p1[0].hide();
					n.show();
					sub = 0;
				}
				update();
			};
		})(parts1,id,p));
	}
	var menu = $("<div>").addClass("menu");
	var ol = $("<ol>");
	var _g13 = 0;
	var _g4 = slides.length;
	while(_g13 < _g4) {
		var i2 = _g13++;
		var title = slides[i2].find("h1").eq(0).text();
		if(title == "") {
			title = "Slide #" + (i2 + 1);
		}
		ol.append($("<li>").append($("<a>").attr("href","#" + i2).text(title)));
	}
	menu.append(ol);
	menu.append($("<a>").text("Present mode : " + (clickThrough == null ? "null" : "" + clickThrough)).click(function(_) {
		clickThrough = !clickThrough;
		window.localStorage.setItem("click","" + (clickThrough == null ? "null" : "" + clickThrough));
		window.location.reload();
	}));
	menu.append("<br>");
	var body = $("body");
	var onResize = function() {
		var slides1 = "scale(" + App.SCALE + ")";
		var slides2 = $("body.fullScreen .slide").css({ "transform" : slides1, "transform-origin" : "center top", "display" : "none"});
		var j = $(window.document);
		var sl = $(slides2[0]);
		var s2 = (App.WIDE ? Math.max : Math.min)(j.width() / sl.outerWidth(),j.height() / sl.outerHeight());
		$("body.fullScreen .slide").css({ "transform" : "scale(" + s2 + ")", "display" : "block"});
		$(".slide").not("body.fullScreen .slide").css({ "transform" : ""});
	};
	menu.append($("<a>").text("Full Screen").click(function(_1) {
		body.toggleClass("fullScreen");
		onResize();
	}));
	body.append(menu).keydown(function(e1) {
		if(e1.keyCode == 27) {
			body.removeClass("fullScreen");
			onResize();
		}
	});
	window.onresize = function(_2) {
		onResize();
	};
	var _g_i4 = 0;
	var _g_j4 = $("h1");
	while(_g_i4 < _g_j4.length) {
		var h = $(_g_j4[_g_i4++]);
		var count = [0];
		if(h.text().indexOf(" ") < 0) {
			continue;
		}
		if(h.hasClass("wordinv")) {
			count[0]++;
		}
		h.html(new EReg("(@|[^ ]+)","g").map(h.text(),(function(count1) {
			return function(r1) {
				return "<div class='word w" + count1[0]++ + "'>" + r1.matched(0) + "</div>";
			};
		})(count)));
	}
	var _g_i5 = 0;
	var _g_j5 = $("[bg]");
	while(_g_i5 < _g_j5.length) {
		var v = $(_g_j5[_g_i5++]);
		v.css({ background : "url(img/" + v.attr("bg") + ")", "background-size" : "cover"});
	}
	slides[cur].show();
	var t1 = new haxe_Timer(100);
	t1.run = function() {
		if(window.location.hash != curHash) {
			window.location.reload();
			t1.stop();
		}
	};
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g11 = 0;
			var _g3 = l;
			while(_g11 < _g3) {
				var i1 = _g11++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
App.W = 800;
App.H = 600;
App.SCALE = 1.;
App.WIDE = false;
App.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this);
