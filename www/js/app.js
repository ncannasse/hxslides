// Generated by Haxe 3.3.0
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var App = function() { };
App.__name__ = true;
App.main = function() {
	var kwds_r = new RegExp("\\b(" + ["abstract","break","case","cast","class","continue","default","do","dynamic","else","enum","extends","extern","for","function","if","implements","import","in","inline","interface","macro","new","override","package","private","public","return","static","switch","throw","try","typedef","untyped","using","var","while"].join("|") + ")\\b","g".split("u").join(""));
	var vals_r = new RegExp("\\b(" + ["null","true","false","this"].join("|") + ")\\b","g".split("u").join(""));
	var _this = js.JQuery("pre");
	var tmp = (_this.iterator)();
	while(tmp.hasNext()) {
		var s = tmp.next();
		var html = s.html();
		var tabs = null;
		var _g = 0;
		var _g1 = html.split("\n");
		while(_g < _g1.length) {
			var line = _g1[_g];
			++_g;
			if(StringTools.trim(line) != "") {
				var r = new EReg("^\t*","");
				r.match(line);
				var t = r.matched(0);
				if(tabs == null || t.length < tabs.length) {
					tabs = t;
				}
			}
		}
		html = html.replace(new RegExp("^" + Std.string(tabs),"gm".split("u").join("")),"");
		html = StringTools.trim(html);
		html = html.replace(new RegExp("('[^']*')","g".split("u").join("")),"<span __xlass='str'>$1</span>");
		html = html.replace(new RegExp("((#if [a-zA-Z0-9_]+)|(#end)|(#elseif [a-zA-Z0-9_]+))","g".split("u").join("")),"<span __xlass='cond'>$1</span>");
		html = html.replace(new RegExp("(#else)","g".split("u").join("")),"<span __xlass='cond'>$1</span>");
		html = html.replace(kwds_r,"<span class='kwd'>$1</span>");
		html = html.replace(vals_r,"<span class='val'>$1</span>");
		html = html.split("__xlass").join("class");
		html = html.replace(new RegExp("(\"[^\"]*\")","g".split("u").join("")),"<span class='str'>$1</span>");
		html = html.replace(new RegExp("(//[^\n]*)","g".split("u").join("")),"<span class='cmt'>$1</span>");
		html = html.replace(new RegExp("(/\\*[^*]*\\*/)","g".split("u").join("")),"<span class='cmt'>$1</span>");
		html = html.split("\t").join("    ");
		s.html(html);
	}
	var clickThrough = window.localStorage.getItem("click") != "false";
	var _this1 = js.JQuery("pre.byLine");
	var tmp1 = (_this1.iterator)();
	while(tmp1.hasNext()) {
		var pre = tmp1.next();
		var div = js.JQuery("<div>").addClass("pre");
		var _g2 = 0;
		var _g11 = pre.html().split("\n");
		while(_g2 < _g11.length) {
			var line1 = _g11[_g2];
			++_g2;
			var i = 0;
			while(HxOverrides.cca(line1,i) == 32) ++i;
			line1 = HxOverrides.substr(line1,i,null);
			while(i-- > 0) line1 = "&nbsp;" + line1;
			js.JQuery("<div>").addClass("line").html(line1).appendTo(div);
		}
		div.insertAfter(pre);
		pre.remove();
		if(clickThrough) {
			div.hide();
		}
	}
	var slides = [];
	var curHash = window.location.hash;
	var cur = Std.parseInt(HxOverrides.substr(window.location.hash,1,null));
	var sub = Std.parseInt(window.location.hash.split("-")[1]);
	var update = function() {
		curHash = "#" + cur + "-" + sub;
		window.location.hash = curHash;
	};
	if(cur == null) {
		cur = 0;
	}
	if(sub == null) {
		sub = 0;
	}
	var changeSlide = function(tid) {
		var p = slides[cur];
		var n = slides[tid];
		if(n == null) {
			return;
		}
		cur = tid;
		if(p != null) {
			p.slide.hide();
		}
		n.slide.show();
		p.sub = sub;
		sub = n.sub;
		update();
	};
	var changeSub = function() {
		var parts = slides[cur].parts;
		var p1 = js.JQuery(parts[sub]);
		p1.show().parent().show();
		if(p1.hasClass("hidePrev")) {
			js.JQuery(parts[sub - 1]).hide();
		}
		if(p1.hasClass("highlight")) {
			var tmp2 = (parts.iterator)();
			while(tmp2.hasNext()) {
				var p2 = tmp2.next();
				p2.toggleClass("light",p1[0] == p2[0]).toggleClass("unlight",p1[0] != p2[0]);
			}
		}
		++sub;
		update();
	};
	var _this2 = js.JQuery(".slide");
	var tmp3 = (_this2.iterator)();
	while(tmp3.hasNext()) {
		var s1 = tmp3.next();
		var p3 = s1.wrap("<div class='slide-container'>").parent();
		s1.prepend(js.JQuery("<div>").addClass("slide-bg"));
		var id = [slides.length];
		var parts1 = [s1.find("li,pre,h2,p,div.pre .line,.click").not("li > pre:first-child").filter(clickThrough?"*":"empty")];
		parts1[0] = parts1[0].not(".visible");
		parts1[0].hide();
		if(id[0] == cur) {
			var _g12 = 0;
			var _g3 = sub;
			while(_g12 < _g3) js.JQuery(parts1[0][_g12++]).show().parent().show();
		}
		slides.push({ slide : p3, parts : parts1[0], sub : 0});
		p3.hide();
		var forward = [(function(parts2,id1) {
			return function() {
				if(sub < parts2[0].length) {
					changeSub();
				} else {
					changeSlide(id1[0] + 1);
				}
			};
		})(parts1,id)];
		s1.click((function(forward1) {
			return function(e) {
				forward1[0]();
			};
		})(forward));
	}
	var menu = js.JQuery("<div>").addClass("menu");
	var ol = js.JQuery("<ol>");
	var _g13 = 0;
	var _g4 = slides.length;
	while(_g13 < _g4) {
		var i1 = _g13++;
		var title = slides[i1].slide.find("h1").eq(0).text();
		ol.append(js.JQuery("<li>").append(js.JQuery("<a>").attr("href","#" + i1).text(title)));
	}
	menu.append(ol);
	menu.append(js.JQuery("<a>").text("Present mode : " + (clickThrough == null?"null":"" + clickThrough)).click(function() {
		clickThrough = !clickThrough;
		window.localStorage.setItem("click","" + (clickThrough == null?"null":"" + clickThrough));
		window.location.reload();
	}));
	menu.append("<br>");
	var body = js.JQuery("body");
	var onResize = function() {
		js.JQuery(".slide").css({ '-webkit-transform' : "scale(1)", '-webkit-transform-origin' : "center top"});
		var j = js.JQuery(window.document);
		var tmp4 = "scale(" + Math.min(j.width() / 800,j.height() / 600);
		js.JQuery("body.fullScreen .slide").css({ '-webkit-transform' : tmp4 + ")"});
	};
	menu.append(js.JQuery("<a>").text("Full Screen").click(function() {
		body.toggleClass("fullScreen");
		onResize();
	}));
	body.append(menu).keydown(function(e1) {
		switch(e1.keyCode) {
		case 27:
			body.removeClass("fullScreen");
			onResize();
			break;
		case 37:
			changeSlide(cur - 1);
			break;
		case 39:
			changeSlide(cur + 1);
			break;
		case 40:
			changeSub();
			break;
		}
	});
	window.onresize = function(_) {
		onResize();
	};
	var _this3 = js.JQuery("h1");
	var tmp5 = (_this3.iterator)();
	while(tmp5.hasNext()) {
		var h = tmp5.next();
		var count = [0];
		if(h.text().indexOf(" ") < 0) {
			continue;
		}
		h.html(new EReg("(@|[^ ]+)","g").map(h.text(),(function(count1) {
			return function(r1) {
				return "<div class='word w" + count1[0]++ + "'>" + r1.matched(0) + "</div>";
			};
		})(count)));
	}
	slides[cur].slide.show();
	var t1 = new haxe_Timer(100);
	t1.run = function() {
		if(window.location.hash != curHash) {
			window.location.reload();
			t1.stop();
		}
	};
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0?s:HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0?HxOverrides.substr(s,pos,null):HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
var q = window.jQuery;
var js = js || {}
js.JQuery = q;
q.fn.iterator = function() {
	return { pos : 0, j : this, hasNext : function() {
		return this.pos < this.j.length;
	}, next : function() {
		return $(this.j[this.pos++]);
	}};
};
App.main();
})();
